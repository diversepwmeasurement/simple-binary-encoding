concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}
env:
  CMAKE_VERSION: 3.14.7
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.java.installations.auto-detect=false
    -Dorg.gradle.warning.mode=fail
jobs:
  cpp-clang-2004-build:
    env:
      CC: clang-${{ matrix.version }}
      CXX: clang++-${{ matrix.version }}
    name: C++ Clang ${{ matrix.version }} (Ubuntu 20.04)
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.sha }}
    - continue-on-error: true
      name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-

          '
    - continue-on-error: true
      name: Cache Gradle wrappers
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties')
          }}
        path: ~/.gradle/wrapper
    - continue-on-error: true
      name: Install compiler
      run: 'sudo mkdir -p /etc/apt/keyrings/

        curl https://apt.llvm.org/llvm-snapshot.gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/llvm-snapshot.gpg

        echo "deb [signed-by=/etc/apt/keyrings/llvm-snapshot.gpg] http://apt.llvm.org/focal/
        llvm-toolchain-focal-${{ matrix.version }} main" | sudo tee /etc/apt/sources.list.d/llvm.list

        sudo apt-get update

        sudo apt-get install -y clang-${{ matrix.version }} libsparsehash-dev libidn11

        curl -O -L https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz

        tar xf cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz

        echo "cmake-${CMAKE_VERSION}-Linux-x86_64/bin" >> $GITHUB_PATH

        '
    - continue-on-error: true
      name: Build
      run: ./cppbuild/cppbuild
    strategy:
      fail-fast: false
      matrix:
        version:
        - '9'
        - '10'
        - '11'
        - '12'
  cpp-clang-2204-build:
    env:
      CC: clang-${{ matrix.version }}
      CXX: clang++-${{ matrix.version }}
    name: C++ Clang ${{ matrix.version }} (Ubuntu 22.04)
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.sha }}
    - continue-on-error: true
      name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-

          '
    - continue-on-error: true
      name: Cache Gradle wrappers
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties')
          }}
        path: ~/.gradle/wrapper
    - continue-on-error: true
      name: Install compiler
      run: 'sudo mkdir -p /etc/apt/keyrings/

        curl https://apt.llvm.org/llvm-snapshot.gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/llvm-snapshot.gpg

        echo "deb [signed-by=/etc/apt/keyrings/llvm-snapshot.gpg] http://apt.llvm.org/jammy/
        llvm-toolchain-jammy-${{ matrix.version }} main" | sudo tee /etc/apt/sources.list.d/llvm.list

        sudo apt-get update

        sudo apt-get install -y clang-${{ matrix.version }}

        curl -O -L https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz

        tar xf cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz

        echo "cmake-${CMAKE_VERSION}-Linux-x86_64/bin" >> $GITHUB_PATH

        '
    - continue-on-error: true
      name: Build
      run: ./cppbuild/cppbuild
    strategy:
      fail-fast: false
      matrix:
        version:
        - '13'
        - '14'
        - '15'
        - '16'
        - '17'
  cpp-clang-macos-build:
    env:
      CC: clang
      CXX: clang++
    name: C++ Xcode ${{ matrix.version }} (macOS)
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.sha }}
    - continue-on-error: true
      name: Install CMake
      run: 'curl -O -L https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}-Darwin-x86_64.tar.gz

        tar xf cmake-${CMAKE_VERSION}-Darwin-x86_64.tar.gz

        echo "cmake-${CMAKE_VERSION}-Darwin-x86_64/CMake.app/Contents/bin" >> $GITHUB_PATH

        '
    - continue-on-error: true
      name: Build
      run: cmake --version && ./cppbuild/cppbuild
    strategy:
      fail-fast: false
      matrix:
        os:
        - macos-latest
  cpp-gcc-2004-build:
    env:
      CC: gcc-${{ matrix.version }}
      CXX: g++-${{ matrix.version }}
    name: C++ GCC ${{ matrix.version }} (Ubuntu 20.04)
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.sha }}
    - continue-on-error: true
      name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-

          '
    - continue-on-error: true
      name: Cache Gradle wrappers
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties')
          }}
        path: ~/.gradle/wrapper
    - continue-on-error: true
      name: Install compiler
      run: 'sudo add-apt-repository "deb http://archive.ubuntu.com/ubuntu/ bionic
        main universe"

        sudo apt-get install -y g++-${{ matrix.version }} libsparsehash-dev libidn11

        curl -O -L https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz

        tar xf cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz

        echo "cmake-${CMAKE_VERSION}-Linux-x86_64/bin" >> $GITHUB_PATH

        '
    - continue-on-error: true
      name: Build
      run: ./cppbuild/cppbuild
    strategy:
      fail-fast: false
      matrix:
        version:
        - '6'
        - '7'
        - '8'
        - '9'
        - '10'
  cpp-gcc-2204-build:
    env:
      CC: gcc-${{ matrix.version }}
      CXX: g++-${{ matrix.version }}
    name: C++ GCC ${{ matrix.version }} (Ubuntu 22.04)
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.sha }}
    - continue-on-error: true
      name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-

          '
    - continue-on-error: true
      name: Cache Gradle wrappers
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties')
          }}
        path: ~/.gradle/wrapper
    - continue-on-error: true
      name: Install compiler
      run: 'sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test

        sudo apt-get update

        sudo apt-get install -y g++-${{ matrix.version }}

        curl -O -L https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz

        tar xf cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz

        echo "cmake-${CMAKE_VERSION}-Linux-x86_64/bin" >> $GITHUB_PATH

        '
    - continue-on-error: true
      name: Build
      run: ./cppbuild/cppbuild
    strategy:
      fail-fast: false
      matrix:
        version:
        - '11'
        - '12'
        - '13'
  cpp-msvc-build:
    env:
      CC: cl
      CXX: cl
    name: C++ MSVC (Windows)
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.sha }}
    - continue-on-error: true
      name: Install CMake
      run: '$client = new-object System.Net.WebClient

        $client.DownloadFile("https://github.com/Kitware/CMake/releases/download/v$Env:CMAKE_VERSION/cmake-$Env:CMAKE_VERSION-win64-x64.zip","cmake-$Env:CMAKE_VERSION-win64-x64.zip")

        7z x cmake-$Env:CMAKE_VERSION-win64-x64.zip

        echo "cmake-$Env:CMAKE_VERSION-win64-x64/bin" | Out-File -FilePath $env:GITHUB_PATH
        -Encoding utf8

        '
    - continue-on-error: true
      name: Build
      run: cppbuild/cppbuild.cmd
    strategy:
      fail-fast: false
      matrix:
        os:
        - windows-latest
  csharp-build:
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
    name: C# ${{ matrix.dotnet }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.sha }}
    - continue-on-error: true
      name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-

          '
    - continue-on-error: true
      name: Cache Gradle wrappers
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties')
          }}
        path: ~/.gradle/wrapper
    - continue-on-error: true
      name: Cache NuGet dependencies
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-nuget-${{ hashFiles('csharp/**/*.sln') }}
        path: ~/.nuget/packages
        restore-keys: '${{ runner.os }}-nuget-

          '
    - continue-on-error: true
      name: Setup dotnet
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet }}
    - continue-on-error: true
      name: Build
      run: ./csharp/build.sh
    - continue-on-error: true
      name: Run tests
      run: ./csharp/runtests.sh
    - continue-on-error: true
      name: Pack
      run: ./csharp/pack.sh
    strategy:
      fail-fast: false
      matrix:
        dotnet:
        - 8.0.x
  golang-build:
    name: Golang ${{ matrix.version }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.sha }}
    - continue-on-error: true
      name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-

          '
    - continue-on-error: true
      name: Cache Gradle wrappers
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties')
          }}
        path: ~/.gradle/wrapper
    - continue-on-error: true
      name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.version }}
    - continue-on-error: true
      name: Generate codecs
      run: ./gradlew generateGolangCodecs
    - continue-on-error: true
      name: Go
      run: cd gocode && make
    strategy:
      fail-fast: false
      matrix:
        version:
        - 1.22.x
  java-build:
    name: Java ${{ matrix.java }} (${{ matrix.os }})
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.sha }}
    - continue-on-error: true
      name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-

          '
    - continue-on-error: true
      name: Cache Gradle wrappers
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties')
          }}
        path: ~/.gradle/wrapper
    - continue-on-error: true
      name: Setup java
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: ${{ matrix.java }}
    - continue-on-error: true
      name: Setup BUILD_JAVA_HOME & BUILD_JAVA_VERSION
      run: 'java -Xinternalversion

        echo "BUILD_JAVA_HOME=${JAVA_HOME}" >> $GITHUB_ENV

        echo "BUILD_JAVA_VERSION=${{ matrix.java }}" >> $GITHUB_ENV

        '
    - continue-on-error: true
      name: Setup java 8 to run the Gradle script
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: 8
    - continue-on-error: true
      name: Build with Gradle
      run: ./gradlew
    strategy:
      fail-fast: false
      matrix:
        java:
        - '8'
        - '17'
        - '21'
        os:
        - ubuntu-22.04
        - windows-latest
  rust-build:
    name: Rust ${{ matrix.rust }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.sha }}
    - continue-on-error: true
      name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        path: ~/.gradle/caches
        restore-keys: '${{ runner.os }}-gradle-

          '
    - continue-on-error: true
      name: Cache Gradle wrappers
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties')
          }}
        path: ~/.gradle/wrapper
    - continue-on-error: true
      name: Rust setup
      uses: actions-rs/toolchain@v1
      with:
        override: true
        profile: minimal
        toolchain: ${{ matrix.rust }}
    - continue-on-error: true
      run: ./gradlew runRustTests
    strategy:
      fail-fast: false
      matrix:
        rust:
        - stable
        - beta
        - nightly
name: Continuous Integration
on:
  repository_dispatch:
    types: trigger-ga___ci.yml
permissions:
  contents: read
